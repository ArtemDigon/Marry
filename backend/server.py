from flask import Flask, request
from flask_cors import CORS
import base64, json, hashlib, csv, os, requests
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

app = Flask(__name__)
CORS(app)

# üîê –¢–≤–æ–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
SECRET_KEY = "q7EDXy7aVaDdnFOZG8FhRlePvKxXU3n97nMKxDz0dbU="

# üìÅ CSV-—Ñ–∞–π–ª
CSV_FILENAME = "responses.csv"

# üõ°Ô∏è –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á reCAPTCHA (–∏–∑ Google reCAPTCHA admin panel)
RECAPTCHA_SECRET_KEY = "6LciuEQrAAAAAI_GbM-o1DE1vC4Hsni-iiB95nc3"  # üëà –í–°–¢–ê–í–¨ –°–Æ–î–ê!

# –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ —Å–æ–∑–¥–∞—ë–º CSV
if not os.path.exists(CSV_FILENAME):
    with open(CSV_FILENAME, "w", newline="", encoding="utf-8") as f:
        csv.writer(f).writerow(["–ò–º—è", "–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ", "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä"])

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ reCAPTCHA —É Google
def verify_recaptcha(token):
    response = requests.post(
        "https://www.google.com/recaptcha/api/siteverify",
        data={
            "secret": RECAPTCHA_SECRET_KEY,
            "response": token
        }
    )
    result = response.json()
    print("üîç –û—Ç–≤–µ—Ç –æ—Ç Google:", result)
    return result.get("success", False)

# üîì –î–µ—à–∏—Ñ—Ä–æ–≤–∫–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ payload
def decrypt_payload(ciphertext_b64: str) -> dict:
    raw = base64.b64decode(ciphertext_b64)
    key = hashlib.sha256(SECRET_KEY.encode()).digest()
    iv = raw[:16]
    ciphertext = raw[16:]
    cipher = AES.new(key, AES.MODE_CBC, iv)
    decrypted = unpad(cipher.decrypt(ciphertext), AES.block_size)
    return json.loads(decrypted.decode("utf-8"))

@app.route("/webhook", methods=["POST"])
def webhook():
    print("üì• request.json:", request.json)
    json_data = request.get_json()

    # üëâ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∫–∞–ø—á–∏
    captcha_token = json_data.get("captcha")
    if not captcha_token or not verify_recaptcha(captcha_token):
        return "‚ùå –ö–∞–ø—á–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞", 400

    # üëâ –ü–æ–ª—É—á–∞–µ–º –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º payload
    payload = json_data.get("payload")
    try:
        data = decrypt_payload(payload)
        print("üîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ:", data)
    except Exception as e:
        print("‚õî –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏:", e)
        return f"–û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏: {str(e)}", 400

    # üëâ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ CSV
    try:
        with open(CSV_FILENAME, "a", newline="", encoding="utf-8") as f:
            csv.writer(f).writerow([
                data.get("name", ""),
                data.get("attending", ""),
                data.get("transfer", "")
            ])
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    except Exception as e:
        print("üõë –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏:", e)
        return "–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏", 500

    return "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ"


# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=5001)
